# Generated by Django 5.0.7 on 2024-08-18 17:50

import data.models
import django.utils.timezone
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Accommodations",
            fields=[
                (
                    "id_accommodation",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("property", models.CharField(blank=True, max_length=255)),
                ("state", models.BooleanField(default=True)),
                ("internal_images", models.TextField(default="[]")),
                (
                    "category",
                    models.CharField(
                        choices=[
                            ("inn", "Inn"),
                            ("chalet", "Chalet"),
                            ("apartment", "Apartment"),
                            ("home", "Home"),
                            ("room", "Room"),
                        ],
                        default="inn",
                        max_length=50,
                    ),
                ),
                (
                    "rooms",
                    models.IntegerField(
                        choices=[
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                            (10, "10"),
                            (11, "11"),
                            (12, "12"),
                            (13, "13"),
                            (14, "14"),
                            (15, "15"),
                            (16, "16"),
                            (17, "17"),
                            (18, "18"),
                            (19, "19"),
                            (20, "20"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "beds",
                    models.IntegerField(
                        choices=[
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                            (10, "10"),
                            (11, "11"),
                            (12, "12"),
                            (13, "13"),
                            (14, "14"),
                            (15, "15"),
                            (16, "16"),
                            (17, "17"),
                            (18, "18"),
                            (19, "19"),
                            (20, "20"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "bathroom",
                    models.IntegerField(
                        choices=[
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                            (10, "10"),
                            (11, "11"),
                            (12, "12"),
                            (13, "13"),
                            (14, "14"),
                            (15, "15"),
                            (16, "16"),
                            (17, "17"),
                            (18, "18"),
                            (19, "19"),
                            (20, "20"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "accommodated_guests",
                    models.IntegerField(
                        choices=[
                            (1, "1"),
                            (2, "2"),
                            (3, "3"),
                            (4, "4"),
                            (5, "5"),
                            (6, "6"),
                            (7, "7"),
                            (8, "8"),
                            (9, "9"),
                            (10, "10"),
                            (11, "11"),
                            (12, "12"),
                            (13, "13"),
                            (14, "14"),
                            (15, "15"),
                            (16, "16"),
                            (17, "17"),
                            (18, "18"),
                            (19, "19"),
                            (20, "20"),
                        ],
                        default=1,
                    ),
                ),
                (
                    "type_of_space",
                    models.CharField(
                        choices=[
                            ("full_space", "Full Space"),
                            ("limited_space", "Limited Space"),
                        ],
                        default="full_space",
                        max_length=50,
                    ),
                ),
                ("address", models.CharField(default="Not informed", max_length=255)),
                ("city", models.CharField(default="Not informed", max_length=100)),
                (
                    "neighborhood",
                    models.CharField(default="Not informed", max_length=100),
                ),
                ("cep", models.CharField(default="Not informed", max_length=10)),
                (
                    "complement",
                    models.CharField(
                        blank=True, default="Not informed", max_length=255
                    ),
                ),
                ("wifi", models.BooleanField(default=False)),
                ("tv", models.BooleanField(default=False)),
                ("kitchen", models.BooleanField(default=False)),
                ("washing_machine", models.BooleanField(default=False)),
                ("parking_included", models.BooleanField(default=False)),
                ("air_conditioning", models.BooleanField(default=False)),
                ("pool", models.BooleanField(default=False)),
                ("jacuzzi", models.BooleanField(default=False)),
                ("grill", models.BooleanField(default=False)),
                ("private_gym", models.BooleanField(default=False)),
                ("beach_access", models.BooleanField(default=False)),
                ("smoke_detector", models.BooleanField(default=False)),
                ("fire_extinguisher", models.BooleanField(default=False)),
                ("first_aid_kit", models.BooleanField(default=False)),
                ("outdoor_camera", models.BooleanField(default=False)),
                ("name", models.CharField(max_length=255)),
                ("description", models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id_user",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("birth_date", models.DateField(blank=True, null=True)),
                (
                    "phone_number",
                    models.CharField(blank=True, max_length=20, null=True),
                ),
                ("username", models.CharField(max_length=150, unique=True)),
                ("email", models.EmailField(max_length=254, unique=True)),
                (
                    "social_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "profile_picture",
                    models.ImageField(
                        blank=True, null=True, upload_to=data.models.upload_image
                    ),
                ),
                (
                    "emergency_contact",
                    models.CharField(blank=True, max_length=150, null=True),
                ),
                (
                    "registered_accommodations",
                    models.TextField(blank=True, default="[]"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "user",
                "verbose_name_plural": "users",
                "abstract": False,
            },
        ),
    ]
